a.anchor#home
.jumbotron
  .container-fluid
    .row
      .col-lg-10.col-lg-offset-1
        h1 <span>rails</span>box
        h2 Fast and easy Ruby on Rails development boxes
        p
          ' Ruby developer? Heard about <strong>DevOps</strong> but too busy to learn it? Streamline your development workflow in no time by creating production-like virtual machine with your development environment. Try this extremely simple to use VM configuration tool to create new <strong>Ruby on Rails</strong> server using
          a href='https://www.vagrantup.com/' <strong>vagrant</strong>
          '  and
          a href='http://www.ansible.com/' <strong>ansible</strong>
          ' .
        p.button
          a.btn.btn-default.btn-lg href='#start' Get started

a.anchor#start
.container-fluid ng-controller='ConfigurationController'
  form role='form' method='post' action=configurations_path
    = token_tag nil
    a.anchor#vm-settings
    .row.step.step1
      .col-lg-1.step-number
        h1 1
      .col-lg-11.step-conf
        .panel.panel-default
          .panel-heading
            h2.panel-title Virtual machine settings
          .panel-body
            .row
              .col-lg-4
                .form-group
                  label for='vm_name' Name
                  input.form-control id='vm_name' name='vm_name' type='text' ng-model='vm.name'
              .col-lg-4
                .form-group
                  label for='vm_os' Operating System
                  select.form-control id='vm_os' name='vm_os' ng-options='os.name for os in osList track by os.box' ng-model='vm.os'
              .col-lg-4
                .form-group
                  label for='vm_http_forwarded_port' Forward HTTP port
                  p
                    small HTTP port which will be forwarded from your guest machine to the host machine. Your application will be available as <a target='_blank' href='{{ applicationHttpUrl() }}'>{{ applicationHttpUrl() }}</a>.
                  br
                  input.form-control id='vm_http_forwarded_port' name='vm_http_forwarded_port' type='text' ng-model='vm.httpForwardPort'
            .row
              .col-lg-4
                .form-group
                  label for='vm_memory' Memory, Mb
                  p
                    small The amount of memory which will be available for virtual machine. Ruby on Rails application are usually memory-heavy, so increasing this value to <strong>1024</strong> make sense sometimes.
                  input.form-control id='vm_memory' name='vm_memory' type='text' ng-model='vm.memory'
              .col-lg-4
                .form-group
                  label for='vm_cores' CPU cores
                  p
                    small Number of CPU cores which will be dedicated to virtual machine. Usually the default of <strong>1</strong> works fine, but for CPU-intensive applications you may raise it to <strong>2</strong> or higher.
                  select.form-control id='vm_cores' name='vm_cores' ng-options='coreNum for coreNum in coresList track by coreNum' ng-model='vm.cores'
              .col-lg-4
                .form-group
                  label for='vm_https_forwarded_port' Forward HTTPS port
                  p
                    small HTTPS port which will be forwarded from your guest machine to the host machine. Your application will be available as <a target='_blank' href='{{ applicationHttpsUrl() }}'>{{ applicationHttpsUrl() }}</a>.
                  br
                  input.form-control id='vm_https_forwarded_port' name='vm_https_forwarded_port' type='text' ng-model='vm.httpsForwardPort'

    a.anchor#app-settings
    .row.step.step2
      .col-lg-1.step-number
        h1 2
      .col-lg-11.step-conf
        .panel.panel-default
          .panel-heading
            h2.panel-title Application settings
          .panel-body
            .row
              .col-lg-4
                .form-group
                  label for='server_name' Server name
                  p
                    small Your application will be served by <a href="http://nginx.org/">nginx</a> and <a href="http://unicorn.bogomips.org/">unicorn</a>. You can control it by running standard upstart commands: <mark>sudo stop {{ vm.name }}</mark> and <mark>sudo start {{ vm.name }}</mark>.
                  input.form-control id='server_name' name='server_name' type='text' ng-model='app.serverName'
              .col-lg-4
                .form-group
                  label for='ruby_version' Ruby version
                  p
                    small ruby will be installed as system package using <a href="https://www.brightbox.com/docs/ruby/ubuntu/">brightbox/ruby-ng</a> apt repository. 
                  br
                  select.form-control id='ruby_version' name='ruby_version' ng-options='rubyVersion.label for rubyVersion in rubyVersions track by rubyVersion.version' ng-model='app.rubyVersion'
              .col-lg-4
                .form-group
                  label for='rails_version' Ruby on Rails version
                  p
                    small System will configure some of the services appropriately based on Ruby on Rails version you are using.
                  br
                  select.form-control id='rails_version' name='rails_version' ng-options='railsVersion.label for railsVersion in railsVersions track by railsVersion.version' ng-model='app.railsVersion'

    a.anchor#databases
    .row.step.step3
      .col-lg-1.step-number
        h1 3
      .col-lg-11.step-conf
        .panel.panel-default
          .panel-heading
            h2.panel-title Databases, caching and search
          .panel-body
            div role='tabpanel'
              ul.nav.nav-tabs role='tablist'
                - databases.each do |db|
                  li role='presentation' class=('active' if db.id == 'postgresql')
                    a href="##{db.id}" aria-controls=db.id role='tab' data-toggle='tab'= db.name
              .tab-content
                - databases.each do |db|
                  .tab-pane id=db.id role='tabpanel' class=('active' if db.id == 'postgresql')
                    .checkbox
                      label
                        input checked=('true' if db.id == 'postgresql') type='checkbox' name='databases[]' value=db.id
                        strong Install #{db.name}
                    = render partial: db.id

    a.anchor#background-jobs
    .row.step.step4
      .col-lg-1.step-number
        h1 4
      .col-lg-11.step-conf
        .panel.panel-default
          .panel-heading
            h2.panel-title Background jobs
          .panel-body
            div role='tabpanel'
              ul.nav.nav-tabs role='tablist'
                - background_jobs.each do |bg_job|
                  li role='presentation' class=('active' if bg_job.id == 'delayed_job')
                    a href="##{bg_job.id}" aria-controls=bg_job.id role='tab' data-toggle='tab'= bg_job.name
              .tab-content
                - background_jobs.each do |bg_job|
                  .tab-pane id=bg_job.id role='tabpanel' class=('active' if bg_job.id == 'delayed_job')
                    .checkbox
                      label
                        input type='checkbox' name='background_jobs[]' value=bg_job.id
                        strong Add #{bg_job.name} workers
                    = render partial: bg_job.id

    .row.step.download-step
      .col-lg-12
        button.btn.btn-default.btn-lg= t('.generate')
